{"version":3,"sources":["logo.svg","Algos/main.js","Algos/bubbleSort.js","Algos/quickSort.js","Algos/insertionSort.js","Algos/mergeSort.js","Algos/selectionSort.js","Algos/heapSort.js","Visualizer/Visualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["funcs","swap","el1","el2","temp","style","height","waitforme","milisec","Promise","resolve","setTimeout","disable","document","getElementById","disabled","enable","arr","querySelectorAll","i","length","backgroundColor","speed","a","j","parseInt","fast","partition","l","r","pivot","p","k","quickSort","pivot_index","n","console","log","insertionSort","curr","merge","start","mid","end","max_num","aux","num","Math","floor","mergeSort","mergeSortStart","selectionSort","step","min_idx","heap","heapify","largest","Visualizer","props","state","array","this","resetArray","min","max","value","push","random","setState","bS","sS","iS","mS","qS","hS","className","id","type","onChange","onClick","map","idx","bubbleSort","heapSort","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b5405b51.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const funcs = {\r\n//for swapping two elements\r\n swap(el1, el2) {\r\n    \r\n    let temp = el1.style.height;\r\n    el1.style.height = el2.style.height;\r\n    el2.style.height = temp;\r\n    \r\n},\r\n\r\n//wait \r\n waitforme(milisec) { \r\n    return new Promise(resolve => { \r\n        setTimeout(() => { resolve('') }, milisec); \r\n    }) \r\n},\r\n\r\n disable() {\r\n    document.getElementById(\"new-array\").disabled=true;\r\n    \r\n\r\n    document.getElementById(\"arr_sz\").disabled=true;\r\n    \r\n\r\n    document.getElementById(\"speed_input\").disabled=true;\r\n    \r\n},\r\n\r\n enable() {\r\n     document.getElementById(\"new-array\").disabled=false;\r\n    \r\n\r\n     document.getElementById(\"arr_sz\").disabled=false;\r\n    \r\n\r\n     document.getElementById(\"speed_input\").disabled=false;\r\n\r\n     const arr = document.querySelectorAll(\".array-bar\");\r\n\r\n     for(var i=0;i<arr.length;i++)\r\n     {\r\n         arr[i].style.backgroundColor = 'blue';\r\n     }\r\n    \r\n}\r\n}\r\nexport default funcs;","import funcs from \"./main\"\r\n\r\nexport default async function bS(speed)\r\n{\r\n    funcs.disable();\r\n    //getting values of bars in arr\r\n    const arr = document.querySelectorAll(\".array-bar\");\r\n\r\n    for(let i = 0; i < arr.length-1; i++){\r\n        \r\n        for(let j = 0; j < arr.length-i-1; j++){\r\n            \r\n            //displaying currently selected elements in yellow\r\n            arr[j].style.backgroundColor = 'yellow';\r\n            arr[j+1].style.backgroundColor = 'yellow';\r\n\r\n            //if earlier element greater than later , swap\r\n            if(parseInt(arr[j].style.height) > parseInt(arr[j+1].style.height)){\r\n                \r\n                await funcs.waitforme(speed);\r\n                funcs.swap(arr[j], arr[j+1]);\r\n            }\r\n\r\n            \r\n            arr[j].style.backgroundColor = 'cyan';\r\n            arr[j+1].style.backgroundColor = 'cyan';\r\n        }\r\n        arr[arr.length-1-i].style.backgroundColor = 'green';\r\n    }\r\n    arr[0].style.backgroundColor = 'green';\r\n\r\n    funcs.enable();\r\n}\r\n\r\n\r\n\r\n","import funcs from \"./main\";\r\nlet fast=0;\r\n\r\n//orange for pivot element\r\n//red for current element\r\n//pink if curr element greater than pivot\r\n//yellow if curr element less than pivot\r\n//green for sorted array\r\n//turquoise for elements currently in process of partiotion\r\n//purple for partition\r\nasync function partition(arr,l,r)\r\n{\r\n\r\n    let pivot = arr[l]; //setting first element as pivot of unsorted array\r\n    arr[l].style.backgroundColor='orange';\r\n    await funcs.waitforme(fast);\r\n\r\n    //currently in process\r\n    for(var p=l+1;p<=r;p++)\r\n    arr[p].style.backgroundColor='turquoise';\r\n    \r\n    await funcs.waitforme(fast);\r\n\r\n    let i = l+1;\r\n\r\n    for(var j=l+1;j<=r;j++)\r\n    {\r\n        arr[j].style.backgroundColor = 'red';       //current element\r\n        await funcs.waitforme(fast);\r\n\r\n        //if current element less than pivot\r\n        if(parseInt(arr[j].style.height)<parseInt(pivot.style.height))\r\n        {\r\n            funcs.swap(arr[j],arr[i]);  //swap current element to index next to element smaller that it.\r\n            arr[i].style.backgroundColor = 'yellow';    //smaller than pivot\r\n            if(i !== j) arr[j].style.backgroundColor = 'pink';   //greater element than pivot\r\n\r\n            i++;\r\n\r\n            \r\n            \r\n            await funcs.waitforme(fast);\r\n        }\r\n        else{\r\n            //if not less than pivot\r\n            arr[j].style.backgroundColor = 'pink';\r\n        }\r\n    }\r\n\r\n    //put pivot in position at junc of yellow and pink bars.\r\n    funcs.swap(arr[i-1],arr[l]);\r\n\r\n    arr[i-1].style.backgroundColor='purple';//partition coloured as purple\r\n    \r\n    await funcs.waitforme(fast);\r\n\r\n    for(let k = 0; k < arr.length; k++){\r\n        if(arr[k].style.backgroundColor !== 'green' && arr[k].style.backgroundColor !=='purple')\r\n            arr[k].style.backgroundColor = 'cyan';\r\n    }\r\n    return i-1;\r\n}\r\n\r\nasync function quickSort(arr,l,r)\r\n{\r\n    if(l < r){\r\n\r\n        //elements before pivot set as sorted\r\n        for(var i=0;i<l;i++)\r\n        arr[i].style.backgroundColor='green';\r\n        await funcs.waitforme(fast);\r\n\r\n        let pivot_index = await partition(arr, l, r);\r\n        await quickSort(arr, l, pivot_index - 1);\r\n        await quickSort(arr, pivot_index + 1, r);\r\n    }\r\n    \r\n}\r\n\r\nexport default async function qS(speed){\r\n    fast = speed;\r\n    funcs.disable();        //disabling buttons\r\n\r\n    //getting the elements of array\r\n    var arr = document.querySelectorAll(\".array-bar\");\r\n    let n = arr.length;\r\n\r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i].style.height);}\r\n\r\n    await quickSort(arr,0, n-1);\r\n\r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i].style.height);}\r\n\r\n    funcs.enable();     //enabling buttons\r\n}","import funcs from './main'\r\n\r\nlet fast=0;\r\n\r\n//green for sorted list\r\n//blue for unsorted list\r\n//red for current element for which comparisons need to be done\r\n//yellow for element compared with current element\r\nasync function insertionSort(arr,n)\r\n{\r\n    //marking first element in sorted list\r\n    arr[0].style.backgroundColor = 'green';\r\n    for(var i=1;i<n;i++)\r\n    {\r\n        let curr = arr[i].style.height;\r\n        arr[i].style.backgroundColor = 'red';\r\n        await funcs.waitforme(fast);\r\n        let j = i-1;\r\n\r\n        //traverse sorted list from behind till current element is small\r\n        while(j>-1 && parseInt(curr)<parseInt(arr[j].style.height))\r\n        {\r\n            //element compared with curr marked as yellow\r\n            arr[j].style.backgroundColor = 'yellow';\r\n            //changing values\r\n            arr[j+1].style.height = arr[j].style.height;\r\n            \r\n            await funcs.waitforme(fast);\r\n\r\n            j--;\r\n            \r\n            //marking sorted list as green till ith element\r\n            for(var k=0;k<=i;k++)\r\n            arr[k].style.backgroundColor = 'green';\r\n        }\r\n\r\n        //insert current element at its sorted position and mark as green\r\n        arr[j+1].style.height = curr;\r\n        arr[j+1].style.backgroundColor = 'green';\r\n\r\n    }\r\n}\r\n\r\nexport default async function iS(speed){\r\n    fast = speed;\r\n    funcs.disable();        //disabling buttons\r\n\r\n    //getting the elements of array\r\n    var arr = document.querySelectorAll(\".array-bar\");\r\n    let n = arr.length;\r\n\r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i].style.height);}\r\n\r\n    await insertionSort(arr, n);\r\n\r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i].style.height);}\r\n\r\n    funcs.enable();     //enabling buttons\r\n}","import funcs from \"./main\"\r\n\r\nlet fast = 0;   //speed \r\n\r\n//merges two sorted array\r\n//purple shows start and end points\r\n//yellow shows the elements that are compared\r\n//cyan shows the larger of two elemnets being compared and processed\r\n//red shows the position where the smaller of the two would be placed\r\n//green shows the sorted array\r\nasync function merge(arr,start,mid,end,max_num){\r\n    console.log(\"start = \"+start+\"mid = \"+mid+\"end = \"+end+\"max = \"+max_num);\r\n\r\n    //marks the start and end position of the array being sorted\r\n    arr[start].style.backgroundColor = \"purple\";\r\n    arr[end].style.backgroundColor = \"purple\";\r\n    await funcs.waitforme(fast);\r\n\r\n    let i = start;\r\n    let j = mid+1;\r\n    let k = start;// position where the least of ith and jth pos element would be placed\r\n\r\n    //auxiliary array to store the sorted array\r\n    const aux = [];\r\n\r\n    while(i<=mid && j<=end){\r\n        console.log(\"i = \"+i+\"j = \"+j+\"k = \"+k);\r\n\r\n        //do not change the colour if start or end position element\r\n        //otherwise change it to yellow to show the elements being compared\r\n        if(arr[i].style.backgroundColor!==\"purple\")\r\n            arr[i].style.backgroundColor = \"yellow\";\r\n        if(arr[j].style.backgroundColor!==\"purple\")\r\n            arr[j].style.backgroundColor = \"yellow\";\r\n        await funcs.waitforme(fast);\r\n\r\n        //if ith position element is smaller than jth one\r\n        if(parseInt(arr[i].style.height)%max_num<=parseInt(arr[j].style.height)%max_num){\r\n\r\n            //show bigger elemnet by cyan and the position that smaller should go by red\r\n            //don't change if start or end position element\r\n            if(arr[j].style.backgroundColor!==\"purple\")\r\n                arr[j].style.backgroundColor = \"cyan\";\r\n            if(arr[k].style.backgroundColor!==\"purple\")\r\n                arr[k].style.backgroundColor = \"red\";\r\n            await funcs.waitforme(fast);\r\n\r\n            //get the height of smaller element\r\n            let num = (parseInt(arr[k].style.height)+(parseInt(arr[i].style.height)%max_num)*max_num);\r\n            console.log(num);\r\n\r\n            //stores the num to auxiliary array kth pos\r\n            aux[k] = num;\r\n\r\n            //console.log(num);\r\n            //console.log(arr[k]);\r\n            if(arr[i].style.backgroundColor!==\"purple\")\r\n                arr[i].style.backgroundColor = \"cyan\";\r\n            if(arr[k].style.backgroundColor!==\"purple\")\r\n                arr[k].style.backgroundColor = \"cyan\";\r\n            k++;\r\n            i++; \r\n        } \r\n        //else if ith pos element is not smaller than jth\r\n        else {\r\n            //show bigger element by cyan and the position that smaller should go by red\r\n            //don't change if start or end position element\r\n            if(arr[i].style.backgroundColor!==\"purple\")\r\n                arr[i].style.backgroundColor = \"cyan\";\r\n            if(arr[k].style.backgroundColor!==\"purple\")\r\n                arr[k].style.backgroundColor = \"red\";\r\n            await funcs.waitforme(fast);\r\n\r\n            let num = (parseInt(arr[k].style.height)+(parseInt(arr[j].style.height)%max_num)*max_num);\r\n            console.log(num);\r\n\r\n            aux[k]=num;\r\n            if(arr[j].style.backgroundColor!==\"purple\")\r\n                arr[j].style.backgroundColor = \"cyan\";\r\n            if(arr[k].style.backgroundColor!==\"purple\")\r\n                arr[k].style.backgroundColor = \"cyan\";\r\n            k++;\r\n            j++;\r\n        }\r\n\r\n    }\r\n\r\n    //if ith position doesn't reaches mid then process that too\r\n    while(i<=mid){\r\n\r\n        if(arr[i].style.backgroundColor!==\"purple\")\r\n            arr[i].style.backgroundColor = \"yellow\";\r\n        if(arr[k].style.backgroundColor!==\"purple\")\r\n            arr[k].style.backgroundColor = \"red\";\r\n        await funcs.waitforme(fast);\r\n\r\n        let num = (parseInt(arr[k].style.height)+(parseInt(arr[i].style.height)%max_num)*max_num);\r\n        aux[k]=num;\r\n\r\n        if(arr[i].style.backgroundColor!==\"purple\")\r\n            arr[i].style.backgroundColor = \"cyan\";\r\n        if(arr[k].style.backgroundColor!==\"purple\")\r\n            arr[k].style.backgroundColor = \"cyan\";\r\n        k++;\r\n        i++; \r\n    }\r\n    //if jth position doesn't reaches end then process that too\r\n    while(j<=end){\r\n\r\n        if(arr[j].style.backgroundColor!==\"purple\")\r\n            arr[j].style.backgroundColor = \"yellow\";\r\n        if(arr[k].style.backgroundColor!==\"purple\")\r\n            arr[k].style.backgroundColor = \"red\";\r\n        await funcs.waitforme(fast);\r\n\r\n        let num = (parseInt(arr[k].style.height)+(parseInt(arr[j].style.height)%max_num)*max_num);\r\n        console.log(num);\r\n        aux[k]=num;\r\n\r\n        if(arr[j].style.backgroundColor!==\"purple\")\r\n            arr[j].style.backgroundColor = \"cyan\";\r\n        if(arr[k].style.backgroundColor!==\"purple\")\r\n            arr[k].style.backgroundColor = \"cyan\";\r\n        k++;\r\n        j++;\r\n    }\r\n    \r\n    //change the heights of the array from ith to jth position\r\n    for(i=start; i<=end; i++){\r\n        //replace the ith arr elements to that of ith aux array element\r\n        let num = Math.floor(aux[i]/max_num);\r\n        arr[i].style.height = `${num}px`;\r\n        //show the sorted element in green\r\n        arr[i].style.backgroundColor = \"green\";\r\n        console.log(\"i = \"+i+\" \"+arr[i].style.height);\r\n    }\r\n    \r\n}\r\n\r\n//recursive function to break array into two and then sorts the array\r\nasync function mergeSort(arr, start, end, max_num){\r\n    if(start<end){\r\n        let mid = Math.floor((start+end)/2);\r\n        await mergeSort(arr,start,mid,max_num);\r\n        await mergeSort(arr,mid+1,end,max_num);\r\n        await merge(arr,start,mid,end,max_num);\r\n    }\r\n}\r\n\r\nasync function mergeSortStart(arr,n){\r\n    var max_num = 0;\r\n    for(var i=0; i<n; i++){\r\n        if(parseInt(arr[i].style.height)>max_num){\r\n            max_num = parseInt(arr[i].style.height);\r\n        }\r\n    }\r\n    max_num = max_num+1;\r\n    console.log(\"Max num = \"+max_num);\r\n    \r\n    await mergeSort(arr,0,n-1,max_num);\r\n}\r\nexport default async function mS(speed){\r\n    fast = speed;\r\n    //disable all the speed and array size buttons\r\n    funcs.disable();\r\n    console.log(\".array-bar\");\r\n\r\n    //get the elements of the array\r\n    var arr = document.querySelectorAll(\".array-bar\");\r\n    let n = arr.length;\r\n    /* \r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i]);} \r\n    */\r\n    //console.log(n);\r\n\r\n    //call mergeSort function\r\n    await mergeSortStart(arr,n);\r\n    /* \r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i].style.height);} \r\n    */\r\n   //enable the buttons\r\n    funcs.enable();\r\n}","import funcs from \"./main\"\r\n\r\nlet fast = 0;\r\n\r\n//cyan shows the element that is being compared\r\n//yellow shows the element which is compared to cyan\r\n//red shows the minimum element that will replace cyan\r\n//green shows that element is at its correct sorted position\r\nasync function selectionSort(arr, n){\r\n\r\n    for(let step = 0; step<n-1; step++){\r\n        //min_idx variable which keeps track of min element present\r\n        let min_idx = step;\r\n        arr[step].style.backgroundColor = \"cyan\";\r\n        await funcs.waitforme(fast);\r\n\r\n\r\n        for(let i=step+1; i<n; i++){\r\n            //element being compared to cyan\r\n            arr[i].style.backgroundColor = \"yellow\";\r\n            await funcs.waitforme(fast);\r\n\r\n            //if ith position is minimum than min_idx position\r\n            if(parseInt(arr[i].style.height)<parseInt(arr[min_idx].style.height)){\r\n                //if min idx position is not same as step\r\n                //it means we found an element smaller than min_idx pos\r\n                //so turn the previous min_idx pos as blue\r\n                if(min_idx!==step){\r\n                    arr[min_idx].style.backgroundColor = \"blue\";\r\n                }\r\n                //and change the min_idx pos to i\r\n                min_idx =i;\r\n                //change the minimum position element to red\r\n                arr[min_idx].style.backgroundColor = \"red\";\r\n                await funcs.waitforme(fast);\r\n            }else{\r\n                arr[i].style.backgroundColor = \"blue\";\r\n            }\r\n            \r\n        }\r\n        console.log(min_idx+\" \"+step);\r\n        await funcs.waitforme(fast);\r\n        //after processed change to green\r\n        arr[step].style.backgroundColor = \"green\";\r\n        //change the min_idx back to blue\r\n        arr[min_idx].style.backgroundColor = \"blue\";\r\n        //swap the min_idx position element and step element\r\n        funcs.swap(arr[step],arr[min_idx]);\r\n        await funcs.waitforme(fast);\r\n        //change step element to green\r\n        arr[step].style.backgroundColor = \"green\";\r\n\r\n    }\r\n}\r\nexport default async function sS(speed){\r\n    fast = speed;\r\n    funcs.disable();\r\n\r\n    //get the elements of the array\r\n    var arr = document.querySelectorAll(\".array-bar\");\r\n    let n = arr.length;\r\n    /* \r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i].style.height);} */\r\n\r\n    //call selectionSort func\r\n    await selectionSort(arr, n);\r\n    /* \r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i].style.height);} */\r\n    funcs.enable();\r\n}","import funcs from \"./main\";\r\n\r\nlet fast = 0;\r\n\r\n//cyan for showing root in that particular heap\r\n//yellow for elements to be swapped while calling heapify\r\n//red for elements to be swapped while calling heap\r\n//green for final position of element\r\nasync function heap(arr, n){\r\n\r\n    //build heap\r\n    for(let i= Math.floor(n/2)-1; i>=0; i--){\r\n        await heapify(arr,n,i);\r\n    }\r\n\r\n    //take out element from heap \r\n    for(var i=n-1; i>0; i--){\r\n        //show elements to be swapped by red\r\n        arr[i].style.backgroundColor = \"red\";\r\n        arr[0].style.backgroundColor = \"red\";\r\n        await funcs.waitforme(fast);\r\n        funcs.swap(arr[i],arr[0]);\r\n        await funcs.waitforme(fast);\r\n\r\n        //show final position of element in green\r\n        arr[i].style.backgroundColor = \"green\";\r\n        //again call heapify on the reduced heap\r\n        await heapify(arr,i,0);\r\n    }\r\n    arr[0].style.backgroundColor = \"green\";\r\n}\r\n\r\n//heapify a subtree rooted with node i \r\n//i being the position in arr[]\r\nasync function heapify(arr, n, i){\r\n    //n is heap size\r\n    var largest = i;    //initialise largest as root\r\n    var l = 2*i+1;  //left child being 2*i+1\r\n    var r = 2*i+2;  //right child being 2*i+2\r\n\r\n    //change root to cyan colour\r\n    arr[largest].style.backgroundColor = \"cyan\";\r\n    \r\n    //if left child is larger than root\r\n    if(l<n && parseInt(arr[l].style.height)>parseInt(arr[largest].style.height)){\r\n        await funcs.waitforme(fast);\r\n        //root now becomes left child so chnage it to cyan\r\n        arr[largest].style.backgroundColor = \"blue\";\r\n        arr[l].style.backgroundColor = \"cyan\";\r\n        largest = l;\r\n    }\r\n\r\n    //if right child is larger than root\r\n    if(r<n && parseInt(arr[r].style.height)>parseInt(arr[largest].style.height)){\r\n        await funcs.waitforme(fast);\r\n        //root now becomes right child so chnage it to cyan\r\n        arr[largest].style.backgroundColor = \"blue\";\r\n        arr[r].style.backgroundColor = \"cyan\";\r\n        largest = r;\r\n    }\r\n\r\n    //if largest is not ith element\r\n    if(largest!==i){\r\n        //swap the largest and ith element and then heapify the remaining subtree\r\n        //with root as the largest variable\r\n        await funcs.waitforme(fast);\r\n        arr[largest].style.backgroundColor = \"yellow\";\r\n        arr[i].style.backgroundColor = \"yellow\";\r\n        await funcs.waitforme(fast);\r\n        funcs.swap(arr[i],arr[largest]);\r\n        arr[i].style.backgroundColor = \"blue\";\r\n        await heapify(arr,n,largest);\r\n    }\r\n}\r\nexport default async function hS(speed){\r\n    fast = speed;\r\n    funcs.disable();\r\n    var arr = document.querySelectorAll(\".array-bar\");\r\n    let n = arr.length;\r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i]);}\r\n    await heap(arr,n);\r\n    for(let i=0; i<n; i++)\r\n    {console.log(arr[i].style.height);}\r\n    funcs.enable();\r\n}","import React from 'react'\r\nimport \"./Visualizer.css\";\r\nimport bS from \"../Algos/bubbleSort\"\r\nimport qS from \"../Algos/quickSort\"\r\nimport iS from \"../Algos/insertionSort\"\r\nimport mS from \"../Algos/mergeSort\"\r\nimport sS from \"../Algos/selectionSort\"\r\nimport hS from \"../Algos/heapSort\"\r\n\r\nexport default class Visualizer extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          array: [],\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.resetArray();\r\n      }\r\n    \r\n      //function to reset and generate new array\r\n      resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < document.getElementById(\"arr_sz\").value; i++) {\r\n          array.push(randomIntFromInterval(5, 500));\r\n        }\r\n        this.setState({array});\r\n      }\r\n\r\n      \r\n\r\n      //function for bubble sort\r\n      bubbleSort() {\r\n        \r\n        bS(500-document.getElementById(\"speed_input\").value);\r\n        \r\n      }\r\n\r\n      //function for selection sort\r\n      selectionSort() {\r\n        sS(500-document.getElementById(\"speed_input\").value);\r\n      }\r\n       \r\n      //function for insertion sort\r\n      insertionSort() {\r\n        iS(500-document.getElementById(\"speed_input\").value);\r\n      }\r\n\r\n      //function for merge sort\r\n      mergeSort() {\r\n        mS(500-document.getElementById(\"speed_input\").value);\r\n      }\r\n\r\n      //function for quick sort\r\n      quickSort() {\r\n        qS(500-document.getElementById(\"speed_input\").value);\r\n      }\r\n\r\n      heapSort() {\r\n        hS(500-document.getElementById(\"speed_input\").value);\r\n      }\r\n\r\n\r\n      //main rendering function\r\n      render() {\r\n          const {array} = this.state;\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <h1> Sorting Visualizer </h1>\r\n                </div>\r\n                <div className=\"col\">\r\n                <span >Size\r\n                    5<input id=\"arr_sz\" type=\"range\" min=\"5\" max=\"100\" step={1} onChange={() => this.resetArray()}/>100\r\n                </span>\r\n                <span id=\"speed\">Speed\r\n                    <input id=\"speed_input\" type=\"range\" min=\"20\" max=\"490\" step={10}/>\r\n                </span>\r\n                <br></br>\r\n                <br></br>\r\n                <span>\r\n                    <input id=\"new-array\" type=\"button\" value=\"Generate New Array\" onClick={()=> this.resetArray()} />\r\n                </span>\r\n                </div>\r\n                <br/>\r\n                <div className=\"array-container\">\r\n                    {array.map((value, idx) => (\r\n                    <div\r\n                    className=\"array-bar\"\r\n                    key={idx}\r\n                    style={{backgroundColor: `blue`,height: `${value}px`}}></div>\r\n                    ))}\r\n                </div>\r\n\r\n                <br></br>\r\n\r\n                <div className=\"btns\">\r\n                    <input type=\"button\" value=\"Bubble Sort\" onClick={() => this.bubbleSort()}/>\r\n                    <input type=\"button\" value=\"Merge Sort\" onClick={() => this.mergeSort()}/>\r\n                    <input type=\"button\" value=\"Quick Sort\" onClick={() => this.quickSort()}/>\r\n                    <input type=\"button\" value=\"Selection Sort\" onClick={() => this.selectionSort()}/>\r\n                    <input type=\"button\" value=\"Insertion Sort\" onClick={() => this.insertionSort()}/>\r\n                    <input type=\"button\" value=\"Heap Sort\" onClick={() => this.heapSort()}/>\r\n                </div>\r\n            </div>\r\n        )\r\n      }\r\n}\r\n\r\n//function to generate random numbers between min and max\r\nfunction randomIntFromInterval(min, max) {\r\n    // min and max included\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n\r\n\r\n","// eslint-disable-next-line\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Visualizer from './Visualizer/Visualizer';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Visualizer></Visualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}